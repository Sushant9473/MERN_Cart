{"ast":null,"code":"import { createStore } from \"redux\";\nimport { omit } from \"lodash\";\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: product\n  };\n}\nexport function removeFromCart(product) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: product\n  };\n}\nfunction cartReducer(state = {\n  items: {}\n}, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        const product = action.payload;\n        if (state.items[product.id]) {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...state.items[product.id],\n                quantity: state.items[product.id].quantity + 1\n              }\n            }\n          };\n        } else {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...product,\n                quantity: 1\n              }\n            }\n          };\n        }\n      }\n    case REMOVE_FROM_CART:\n      {\n        const product = action.payload;\n        if (state.items[product.id].quantity <= 1) {\n          return {\n            ...state,\n            items: omit(state.items, [product.id])\n          };\n        } else {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...state.items[product.id],\n                quantity: state.items[product.id].quantity - 1\n              }\n            }\n          };\n        }\n      }\n    default:\n      return state;\n  }\n}\nconst store = createStore(cartReducer);\nexport default store;","map":{"version":3,"names":["createStore","omit","ADD_TO_CART","REMOVE_FROM_CART","addToCart","product","type","payload","removeFromCart","cartReducer","state","items","action","id","quantity","store"],"sources":["/Users/sushant/Desktop/MERN_Cart/src/store.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { omit } from \"lodash\";\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n\nexport function addToCart(product) {\n    return {\n        type: ADD_TO_CART,\n        payload: product\n    }\n}\n\nexport function removeFromCart(product) {\n    return {\n        type: REMOVE_FROM_CART,\n        payload: product\n    }\n}\n\nfunction cartReducer(state = {items: {}}, action) {\n    switch(action.type) {\n        case ADD_TO_CART: {\n            const product = action.payload;\n            if (state.items[product.id]) {\n                return {\n                    ...state,\n                    items: {\n                        ...state.items,\n                        [product.id]: {\n                            ...state.items[product.id],\n                            quantity: state.items[product.id].quantity + 1\n                        }\n                    }\n                }\n            } else {\n                return {\n                    ...state,\n                    items: {\n                        ...state.items,\n                        [product.id]: {\n                            ...product,\n                            quantity: 1\n                        }\n                    }\n                }\n            }\n\n        }\n        case REMOVE_FROM_CART: {\n            const product = action.payload;\n            if (state.items[product.id].quantity <= 1) {\n                return {\n                ...state,\n                items: omit(state.items, [product.id])\n                }\n            } else {\n                return {\n                ...state,\n                items: {\n                    ...state.items,\n                    [product.id]: {\n                    ...state.items[product.id],\n                    quantity: state.items[product.id].quantity - 1\n                    }\n                }\n                }\n            }\n                }\n        default: \n            return state;\n    }\n}   \n\nconst store = createStore(cartReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,gBAAgB,GAAG,kBAAkB;AAE3C,OAAO,SAASC,SAASA,CAACC,OAAO,EAAE;EAC/B,OAAO;IACHC,IAAI,EAAEJ,WAAW;IACjBK,OAAO,EAAEF;EACb,CAAC;AACL;AAEA,OAAO,SAASG,cAAcA,CAACH,OAAO,EAAE;EACpC,OAAO;IACHC,IAAI,EAAEH,gBAAgB;IACtBI,OAAO,EAAEF;EACb,CAAC;AACL;AAEA,SAASI,WAAWA,CAACC,KAAK,GAAG;EAACC,KAAK,EAAE,CAAC;AAAC,CAAC,EAAEC,MAAM,EAAE;EAC9C,QAAOA,MAAM,CAACN,IAAI;IACd,KAAKJ,WAAW;MAAE;QACd,MAAMG,OAAO,GAAGO,MAAM,CAACL,OAAO;QAC9B,IAAIG,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,EAAE;UACzB,OAAO;YACH,GAAGH,KAAK;YACRC,KAAK,EAAE;cACH,GAAGD,KAAK,CAACC,KAAK;cACd,CAACN,OAAO,CAACQ,EAAE,GAAG;gBACV,GAAGH,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC;gBAC1BC,QAAQ,EAAEJ,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,CAACC,QAAQ,GAAG;cACjD;YACJ;UACJ,CAAC;QACL,CAAC,MAAM;UACH,OAAO;YACH,GAAGJ,KAAK;YACRC,KAAK,EAAE;cACH,GAAGD,KAAK,CAACC,KAAK;cACd,CAACN,OAAO,CAACQ,EAAE,GAAG;gBACV,GAAGR,OAAO;gBACVS,QAAQ,EAAE;cACd;YACJ;UACJ,CAAC;QACL;MAEJ;IACA,KAAKX,gBAAgB;MAAE;QACnB,MAAME,OAAO,GAAGO,MAAM,CAACL,OAAO;QAC9B,IAAIG,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,CAACC,QAAQ,IAAI,CAAC,EAAE;UACvC,OAAO;YACP,GAAGJ,KAAK;YACRC,KAAK,EAAEV,IAAI,CAACS,KAAK,CAACC,KAAK,EAAE,CAACN,OAAO,CAACQ,EAAE,CAAC;UACrC,CAAC;QACL,CAAC,MAAM;UACH,OAAO;YACP,GAAGH,KAAK;YACRC,KAAK,EAAE;cACH,GAAGD,KAAK,CAACC,KAAK;cACd,CAACN,OAAO,CAACQ,EAAE,GAAG;gBACd,GAAGH,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC;gBAC1BC,QAAQ,EAAEJ,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,CAACC,QAAQ,GAAG;cAC7C;YACJ;UACA,CAAC;QACL;MACI;IACR;MACI,OAAOJ,KAAK;EACpB;AACJ;AAEA,MAAMK,KAAK,GAAGf,WAAW,CAACS,WAAW,CAAC;AAEtC,eAAeM,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}