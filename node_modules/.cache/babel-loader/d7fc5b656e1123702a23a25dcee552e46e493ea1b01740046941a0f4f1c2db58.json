{"ast":null,"code":"import { act } from \"react\";\nimport { createStore } from \"redux\";\nimport { omit } from \"lodash\";\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: product\n  };\n}\nexport function removeFromCart(product) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: product\n  };\n}\nfunction cartReducer(state = {\n  items: {}\n}, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        const product = action.payload;\n        if (state.items[product.id]) {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...state.items[product.id],\n                quantity: state.items[product.id].quantity + 1\n              }\n            }\n          };\n        } else {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...product,\n                quantity: 1\n              }\n            }\n          };\n        }\n      }\n    case REMOVE_FROM_CART:\n      {\n        const product = action.payload;\n        if (state.items[product.id].quantity <= 1) {\n          return {\n            ...state,\n            items: omit(state.items, [product.id])\n          };\n        } else {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...state.items[product.id],\n                quantity: state.items[product.id].quantity - 1\n              }\n            }\n          };\n        }\n      }\n    default:\n      return state;\n  }\n}\nconst store = createStore(cartReducer);\nexport default store;\n\n// action is an object \n\n// type\n// payload\n//state = {items: {1:{id: 1, quantity: 11}, 2:{id: 2, quantity: 10}, 3:{id: 3, quantity: 10}, 4:{id: 4, quantity: 10}}} \n\n// ...state, ...product[1]","map":{"version":3,"names":["act","createStore","omit","ADD_TO_CART","REMOVE_FROM_CART","addToCart","product","type","payload","removeFromCart","cartReducer","state","items","action","id","quantity","store"],"sources":["/Users/sushant/Desktop/MERN_Cart/src/store.js"],"sourcesContent":["import { act } from \"react\";\nimport { createStore } from \"redux\";\nimport { omit } from \"lodash\";\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: product\n  }\n}\n\nexport function removeFromCart(product) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: product\n  };\n}\n\nfunction cartReducer(state= { items: {}}, action) {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const product = action.payload;\n      if (state.items[product.id]) {\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            [product.id]: {\n              ...state.items[product.id],\n              quantity: state.items[product.id].quantity + 1\n            }\n          }\n        }\n      } else {\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            [product.id]: {\n              ...product,\n              quantity: 1\n            }\n          }\n        }\n      }\n    }\n    case REMOVE_FROM_CART: {\n      const product = action.payload;\n      if (state.items[product.id].quantity <= 1) {\n        return {\n          ...state,\n          items: omit(state.items, [product.id])\n        }\n      } else {\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            [product.id]: {\n              ...state.items[product.id],\n              quantity: state.items[product.id].quantity - 1\n            }\n          }\n        }\n      }\n\n    }\n    default:\n      return state;\n  }\n}\n\n\nconst store = createStore(cartReducer);\n\nexport default store;\n\n\n// action is an object \n\n// type\n// payload\n//state = {items: {1:{id: 1, quantity: 11}, 2:{id: 2, quantity: 10}, 3:{id: 3, quantity: 10}, 4:{id: 4, quantity: 10}}} \n\n// ...state, ...product[1]"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAC3B,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,gBAAgB,GAAG,kBAAkB;AAC3C,OAAO,SAASC,SAASA,CAACC,OAAO,EAAE;EACjC,OAAO;IACLC,IAAI,EAAEJ,WAAW;IACjBK,OAAO,EAAEF;EACX,CAAC;AACH;AAEA,OAAO,SAASG,cAAcA,CAACH,OAAO,EAAE;EACtC,OAAO;IACLC,IAAI,EAAEH,gBAAgB;IACtBI,OAAO,EAAEF;EACX,CAAC;AACH;AAEA,SAASI,WAAWA,CAACC,KAAK,GAAE;EAAEC,KAAK,EAAE,CAAC;AAAC,CAAC,EAAEC,MAAM,EAAE;EAChD,QAAQA,MAAM,CAACN,IAAI;IACjB,KAAKJ,WAAW;MAAE;QAChB,MAAMG,OAAO,GAAGO,MAAM,CAACL,OAAO;QAC9B,IAAIG,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,EAAE;UAC3B,OAAO;YACL,GAAGH,KAAK;YACRC,KAAK,EAAE;cACL,GAAGD,KAAK,CAACC,KAAK;cACd,CAACN,OAAO,CAACQ,EAAE,GAAG;gBACZ,GAAGH,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC;gBAC1BC,QAAQ,EAAEJ,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,CAACC,QAAQ,GAAG;cAC/C;YACF;UACF,CAAC;QACH,CAAC,MAAM;UACL,OAAO;YACL,GAAGJ,KAAK;YACRC,KAAK,EAAE;cACL,GAAGD,KAAK,CAACC,KAAK;cACd,CAACN,OAAO,CAACQ,EAAE,GAAG;gBACZ,GAAGR,OAAO;gBACVS,QAAQ,EAAE;cACZ;YACF;UACF,CAAC;QACH;MACF;IACA,KAAKX,gBAAgB;MAAE;QACrB,MAAME,OAAO,GAAGO,MAAM,CAACL,OAAO;QAC9B,IAAIG,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,CAACC,QAAQ,IAAI,CAAC,EAAE;UACzC,OAAO;YACL,GAAGJ,KAAK;YACRC,KAAK,EAAEV,IAAI,CAACS,KAAK,CAACC,KAAK,EAAE,CAACN,OAAO,CAACQ,EAAE,CAAC;UACvC,CAAC;QACH,CAAC,MAAM;UACL,OAAO;YACL,GAAGH,KAAK;YACRC,KAAK,EAAE;cACL,GAAGD,KAAK,CAACC,KAAK;cACd,CAACN,OAAO,CAACQ,EAAE,GAAG;gBACZ,GAAGH,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC;gBAC1BC,QAAQ,EAAEJ,KAAK,CAACC,KAAK,CAACN,OAAO,CAACQ,EAAE,CAAC,CAACC,QAAQ,GAAG;cAC/C;YACF;UACF,CAAC;QACH;MAEF;IACA;MACE,OAAOJ,KAAK;EAChB;AACF;AAGA,MAAMK,KAAK,GAAGf,WAAW,CAACS,WAAW,CAAC;AAEtC,eAAeM,KAAK;;AAGpB;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}